apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// React Native Configuration
react {
    autolinkLibrariesWithApp()
}

// Proguard configuration
def enableProguardInReleaseBuilds = false

// JSC Flavor
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.kksv.salarynow"
    defaultConfig {
        applicationId "com.kksv.salarynow"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 38
        versionName "3.9.2"
        // Uncomment if necessary
         missingDimensionStrategy 'react-native-camera', 'mlkit'

          ndk {
        abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
    }
    }
    signingConfigs {
         debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation project(':react-native-file-viewer')
    implementation("com.facebook.react:react-android")
    implementation 'com.facebook.fresco:animated-gif:3.2.0'
    implementation project(':react-native-screens') 
    implementation project(':react-native-vector-icons')
    implementation 'com.google.firebase:firebase-messaging:^21.4.1'
     implementation 'com.google.firebase:firebase-auth:^21.4.1' // Firebase Authentication
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.firebase:firebase-analytics'
    implementation platform('com.google.firebase:firebase-bom:33.6.0')
    implementation project(':react-native-fs')
    // implementation 'com.google.firebase:firebase-core:^21.4.1' // Firebase Core
    implementation("androidx.core:core:1.12.0") {
    exclude group: "com.android.support", module: "support-compat"
}
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Enable Hermes
project.ext.react = [
    enableHermes: false,
]
project.ext.vectoricons = [
    iconFontNames: [ 'Ionicons.ttf', 'MaterialIcons.ttf', 'EvilIcons.ttf','MaterialCommunityIcons.ttf', 'FontAwesome5.ttf' ] // Add other fonts if needed
]
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply plugin: 'com.google.gms.google-services' // This should be at the end of the file